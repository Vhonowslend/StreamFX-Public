// AUTOGENERATED COPYRIGHT HEADER START
// Copyright (C) 2020-2023 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>
// AUTOGENERATED COPYRIGHT HEADER END

#include "handler.hpp"
#include "../encoder-ffmpeg.hpp"

using namespace streamfx::encoder::ffmpeg;

bool handler::handler::has_keyframe_support(ffmpeg_factory* instance)
{
	return (instance->get_avcodec()->capabilities & AV_CODEC_CAP_INTRA_ONLY) == 0;
}

bool handler::handler::is_hardware_encoder(ffmpeg_factory* instance)
{
	return false;
}

bool handler::handler::has_threading_support(ffmpeg_factory* instance)
{
	return (instance->get_avcodec()->capabilities & (AV_CODEC_CAP_FRAME_THREADS | AV_CODEC_CAP_SLICE_THREADS));
}

bool handler::handler::has_pixel_format_support(ffmpeg_factory* instance)
{
	return (instance->get_avcodec()->pix_fmts != nullptr);
}

bool handler::handler::supports_reconfigure(ffmpeg_factory* instance, bool& threads, bool& gpu, bool& keyframes)
{
	return false;
}
